plugins {
    id 'java-library'
}

repositories {
    maven {
        url 'https://hub.chemaxon.com/artifactory/libs-release'
        credentials {
            username cxnHubUser
            password cxnHubPassword
        }
    }
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    api project(':aws-examples-common')
    api 'org.apache.commons:commons-math3:3.5'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

/**
 * Create AWS Lambda deployment package.
 *
 *  - bake in Chemaxon license file when specified by property "cxnLicenseDir"
 *  - include jars specified in "includes.txt" - see README.md in subproject root
 *  - include compiled classes in a jar
 *
 * see https://docs.aws.amazon.com/lambda/latest/dg/java-package.html
 */
tasks.register('deploymentPackage', Zip) {
    group = 'Build'
    description = 'Create AWS Lambda deployment package'
    archiveClassifier = 'deployment-package'
    dependsOn 'jar'
    outputs.upToDateWhen { false }

    def includeList = new File("${rootDir}/includes-msdistr.txt") as String[]

    // Force the inclusion of the jar built from this project (the actual lambda wrapper).
    includeList = includeList + jar.archiveFileName as String[]

    println '[deploymentPackage] Will include: ' + includeList
    include includeList

    if (project.hasProperty('cxnLicenseDir')) {
        if (!new File("${cxnLicenseDir}/license.cxl").exists()) {
            ant.fail("File ${cxnLicenseDir}/license.cxl missing - try to use absolute pathname for the license directory");
        }
        println '[deploymentPackage] Will pack Chemaxon license file into the deployment package from $cxnLicenseDir/license.cxl'

        into('chemaxon') {
            from new File("$cxnLicenseDir").getAbsolutePath()
            include "license.cxl"
        }
    } else {
        println '[deploymentPackage] Use -PcxnLicenseDir=<DIR> to specify the directory that contains the Chemaxon license to be packed into the deployment package'
        println '[deploymentPackage] If license file is not packaged, calculations cannot be executed after deployment.'
    }

    into('lib') {
        from configurations.runtimeClasspath
        from jar
    }
}
